-- MySQL dump 10.13  Distrib 5.6.24, for Win64 (x86_64)
--
-- Host: localhost    Database: freme
-- ------------------------------------------------------
-- Server version	5.5.50-0ubuntu0.14.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Dumping data for table `xsltconverter`
--

LOCK TABLES `xsltconverter` WRITE;
/*!40000 ALTER TABLE `xsltconverter` DISABLE KEYS */;
INSERT INTO `xsltconverter` (`id`, `creation_time`, `description`, `visibility`, `name`, `stylesheet`, `owner_name`) 
VALUES 
(1,1467809414675,'Conversion of the TEI (Text Encoding Initiative) format to HTML, for further processing with e-Services.',1,'tei2temp-html','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" exclude-result-prefixes=\"tei xs\"\n    xmlns:tei=\"http://www.tei-c.org/ns/1.0\" version=\"1.0\" xmlns=\"http://www.w3.org/1999/xhtml\">\n    <xsl:output method=\"html\" indent=\"yes\"/>\n    <xsl:template match=\"/\">\n        <html>\n            <head>\n                <title>dummy title</title>\n            </head>\n            <body>\n                <div id=\"xyz1xyz\">\n                    <xsl:for-each select=\"//tei:text/tei:body//tei:p\">\n                        <xsl:variable name=\"number\">n<xsl:number level=\"any\"/></xsl:variable>\n                        <p id=\"{$number}\">\n                            <xsl:apply-templates mode=\"renameElem\"/>\n                        </p>\n                    </xsl:for-each>\n                </div>\n            </body>\n        </html>\n    </xsl:template>\n    <xsl:template mode=\"renameElem\" match=\"*\">\n        <xsl:variable name=\"attributeValuePairs\">\n            <xsl:for-each select=\"@*\">\n                <xsl:text>@@@delim@@@name:</xsl:text>\n                <xsl:value-of select=\"name()\"/>\n                <xsl:text>@@@value:</xsl:text>\n                <xsl:value-of select=\".\"/>\n                <xsl:if test=\"position() = last()\">\n                    <xsl:text>@@@delim@@@</xsl:text>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:variable>\n        <span xmlns=\"http://www.w3.org/1999/xhtml\" title=\"{$attributeValuePairs}\"\n            class=\"{concat(\\\'convert-\\\',name())}\">\n            <xsl:apply-templates mode=\"renameElem\"/>\n        </span>\n    </xsl:template>\n</xsl:stylesheet>','admin'),
(2,1468386370283,'Conversion of the input to identical output. Can be used e.g. to transform HTML5 to XHTML5.',1,'identity-transformation','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n    exclude-result-prefixes=\"xs\"\n    version=\"2.0\">\n    <xsl:template match=\"node()|@*\">\n        <xsl:copy>\n            <xsl:apply-templates select=\"node()|@*\"></xsl:apply-templates>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>','admin'),
(3,1468395754153,'A stylesheet that uses XSLT 3.0 functionality.',1,'xslt-30-test','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n    exclude-result-prefixes=\"xs\"  xmlns:fn=\"http://www.w3.org/2005/xpath-functions\"\n    version=\"3.0\">\n    <xsl:variable name=\"input\"> &lt;its:locQualityIssues xml:id=\"lq1\" xmlns:its=\"http://www.w3.org/2005/11/its\"&gt;\n        &lt;its:locQualityIssue\n        locQualityIssueType=\"misspelling\"\n        locQualityIssueComment=\"\\\'c\\\'es\\\' is unknown. Could be \\\'c\\\'est\\\'\"\n        locQualityIssueSeverity=\"50\"/&gt;\n        &lt;its:locQualityIssue\n        locQualityIssueType=\"typographical\"\n        locQualityIssueComment=\"Sentence without capitalization\"\n        locQualityIssueSeverity=\"30\"/&gt;\n        &lt;/its:locQualityIssues&gt;</xsl:variable>\n    <xsl:template match=\"/\">\n        <xsl:value-of select=\"count(fn:parse-xml($input)//*)\"></xsl:value-of>\n    </xsl:template>\n</xsl:stylesheet>','admin'),
(8,1468479715855,'Conversion of XLIFF 2.0 to HTML, for further processing with e-Services.',1,'xliff20-to-html','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" exclude-result-prefixes=\"xlf xs\"\n    xmlns:xlf=\"urn:oasis:names:tc:xliff:document:2.0\" version=\"1.0\" xmlns=\"http://www.w3.org/1999/xhtml\">\n    <xsl:output method=\"html\" indent=\"yes\"/>\n    <xsl:template match=\"/\">\n        <html>\n            <head>\n                <title>dummy title</title>\n            </head>\n            <body>\n                <div id=\"xyz1xyz\">\n                    <xsl:for-each select=\"//xlf:source\">\n                        <xsl:variable name=\"number\">n<xsl:number level=\"any\"/></xsl:variable>\n                        <p id=\"{$number}\">\n                            <xsl:apply-templates mode=\"renameElem\"/>\n                        </p>\n                    </xsl:for-each>\n                </div>\n            </body>\n        </html>\n    </xsl:template>\n    <xsl:template mode=\"renameElem\" match=\"*\">\n        <xsl:variable name=\"attributeValuePairs\">\n            <xsl:for-each select=\"@*\">\n                <xsl:text>@@@delim@@@name:</xsl:text>\n                <xsl:value-of select=\"name()\"/>\n                <xsl:text>@@@value:</xsl:text>\n                <xsl:value-of select=\".\"/>\n                <xsl:if test=\"position() = last()\">\n                    <xsl:text>@@@delim@@@</xsl:text>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:variable>\n        <span xmlns=\"http://www.w3.org/1999/xhtml\" title=\"{$attributeValuePairs}\"\n            class=\"{concat(\\\'convert-\\\',name())}\">\n            <xsl:apply-templates mode=\"renameElem\"/>\n        </span>\n    </xsl:template>\n</xsl:stylesheet>','admin'),
(9,1468480970398,'Stylesheet with global parameter. The parameter can be set while calling the stylesheet.',1,'xslt-with-param','<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n    <xsl:param name=\"myparam\">set internally</xsl:param>\n    <xsl:template match=\"/\">\n        <xsl:value-of select=\"$myparam\"/>\n    </xsl:template>\n</xsl:stylesheet>','admin'),
(10,1468930158639,'Conversion of HTML to XLIFF 2.0. The stylesheet currently processes only e-Entity output.',1,'html-to-xliff20','<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:itsm=\"urn:oasis:names:tc:xliff:itsm:2.1\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" exclude-result-prefixes=\"xs h xlf fn\"\n    xmlns:xlf=\"urn:oasis:names:tc:xliff:document:2.0\" version=\"3.0\" xmlns:h=\"http://www.w3.org/1999/xhtml\"\n    xmlns:fn=\"http://www.w3.org/2005/xpath-functions\"\n    xmlns=\"urn:oasis:names:tc:xliff:document:2.0\" >\n    <xsl:output method=\"xml\"/>\n    <xsl:variable name=\"originalInputDoc\">\n        <xsl:copy-of select=\"fn:parse-xml(//*[local-name()=\\\'script\\\'])\"></xsl:copy-of>\n    </xsl:variable>\n    <xsl:variable name=\"htmlDoc\">\n        <xsl:copy-of select=\"/*\"/>\n    </xsl:variable>\n    <xsl:template match=\"/\">\n        <xsl:apply-templates select=\"$originalInputDoc/node()\" mode=\"copy\"/>\n    </xsl:template>\n    <xsl:template match=\"node() | @*\" mode=\"copy\">\n        <xsl:copy>\n            <xsl:apply-templates select=\"node()| @*\" mode=\"copy\"/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=\"h:anchor\" mode=\"copy\">\n        <source>\n            <xsl:variable name=\"position\">n<xsl:number level=\"any\"/></xsl:variable>\n            <xsl:for-each select=\"$htmlDoc\">\n                <xsl:apply-templates select=\"//*[@id=$position]/node()\" mode=\"writeAnnotation\"/>\n            </xsl:for-each>\n        </source>\n    </xsl:template>\n    <xsl:template match=\"span[@class[starts-with(., \\\'convert-\\\')]]\" mode=\"writeAnnotation\">\n        <xsl:element name=\"{substring-after(@class,\\\'convert-\\\')}\">\n            <xsl:if test=\"string-length(@title) > 0\">\n                <xsl:call-template name=\"writeAttrs\">\n                    <xsl:with-param name=\"attList\" select=\"@title\"/>\n                </xsl:call-template>\n            </xsl:if>\n            <xsl:apply-templates mode=\"writeAnnotation\"/>\n        </xsl:element>\n    </xsl:template>\n    <xsl:template mode=\"writeAnnotation\" match=\"span[@its-ta-ident-ref]\">\n        <mrk id=\"{generate-id()}\" type=\"itsm:generic\">\n            <xsl:attribute name=\"itsm:taIdentRef\">\n                <xsl:value-of select=\"@its-ta-ident-ref\"/>\n            </xsl:attribute>\n            <xsl:value-of select=\".\"/>\n        </mrk>\n    </xsl:template>\n    <xsl:template name=\"writeAttrs\">\n        <xsl:param name=\"attList\"/>\n        <xsl:variable name=\"name\"\n            select=\"substring-before(substring-after($attList, \\\'@@@delim@@@name:\\\'), \\\'@@@value:\\\')\"/>\n        <xsl:variable name=\"value\"\n            select=\"substring-before(substring-after($attList, \\\'@@@value:\\\'), \\\'@@@delim@@@\\\')\"/>\n        <xsl:if test=\"($name)\">\n            <xsl:attribute name=\"{$name}\">\n                <xsl:value-of select=\"$value\"/>\n            </xsl:attribute>\n            <xsl:variable name=\"rest\">\n                <xsl:value-of\n                    select=\"substring($attList, string-length(concat(\\\'@@@delim@@@name:\\\', $name, \\\'@@@value:\\\', $value)) + 1)\"\n                />\n            </xsl:variable>\n            <xsl:if test=\"$rest\">\n                <xsl:call-template name=\"writeAttrs\">\n                    <xsl:with-param name=\"attList\" select=\"$rest\"/>\n                </xsl:call-template>\n            </xsl:if>\n        </xsl:if>\n    </xsl:template>\n</xsl:stylesheet>','admin');
/*!40000 ALTER TABLE `xsltconverter` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-07-26 13:18:41
